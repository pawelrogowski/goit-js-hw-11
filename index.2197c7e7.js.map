{"mappings":"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","sources":["node_modules/dotenv/lib/main.js","node_modules/process/browser.js","node_modules/path-browserify/index.js","node_modules/os-browserify/browser.js","node_modules/dotenv/package.json","src/index.js"],"sourcesContent":["const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","{\n  \"name\": \"dotenv\",\n  \"version\": \"16.0.3\",\n  \"description\": \"Loads environment variables from .env file\",\n  \"main\": \"lib/main.js\",\n  \"types\": \"lib/main.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"require\": \"./lib/main.js\",\n      \"types\": \"./lib/main.d.ts\",\n      \"default\": \"./lib/main.js\"\n    },\n    \"./config\": \"./config.js\",\n    \"./config.js\": \"./config.js\",\n    \"./lib/env-options\": \"./lib/env-options.js\",\n    \"./lib/env-options.js\": \"./lib/env-options.js\",\n    \"./lib/cli-options\": \"./lib/cli-options.js\",\n    \"./lib/cli-options.js\": \"./lib/cli-options.js\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"scripts\": {\n    \"dts-check\": \"tsc --project tests/types/tsconfig.json\",\n    \"lint\": \"standard\",\n    \"lint-readme\": \"standard-markdown\",\n    \"pretest\": \"npm run lint && npm run dts-check\",\n    \"test\": \"tap tests/*.js --100 -Rspec\",\n    \"prerelease\": \"npm test\",\n    \"release\": \"standard-version\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/motdotla/dotenv.git\"\n  },\n  \"keywords\": [\n    \"dotenv\",\n    \"env\",\n    \".env\",\n    \"environment\",\n    \"variables\",\n    \"config\",\n    \"settings\"\n  ],\n  \"readmeFilename\": \"README.md\",\n  \"license\": \"BSD-2-Clause\",\n  \"devDependencies\": {\n    \"@types/node\": \"^17.0.9\",\n    \"decache\": \"^4.6.1\",\n    \"dtslint\": \"^3.7.0\",\n    \"sinon\": \"^12.0.1\",\n    \"standard\": \"^16.0.4\",\n    \"standard-markdown\": \"^7.1.0\",\n    \"standard-version\": \"^9.3.2\",\n    \"tap\": \"^15.1.6\",\n    \"tar\": \"^6.1.11\",\n    \"typescript\": \"^4.5.4\"\n  },\n  \"engines\": {\n    \"node\": \">=12\"\n  }\n}\n","require('dotenv').config();\nconst apiKey = process.env.PIXABAY_API_KEY;\nconsole.log(apiKey);\nconsole.log('as');\nfetch(`https://pixabay.com/api/?key=${apiKey}&q=yellow+flowers&image_type=photo`).then(data => console.log(data));\n"],"names":["$4TNnu","parcelRequire","$d6fd97a8f77c3245$var$version","version","$d6fd97a8f77c3245$var$LINE","$d6fd97a8f77c3245$var$_log","message","console","log","$d6fd97a8f77c3245$var$DotenvModule","options","dotenvPath","$1SgHS","resolve","cwd","encoding","debug","Boolean","override","envPath","path","join","$9GD6K","homedir","slice","parsed","parse","$5Io6y","readFileSync","Object","keys","forEach","key","prototype","hasOwnProperty","call","env","e","error","src","obj","match","lines","toString","replace","exec","value","trim","maybeQuote","module","exports","config","$391299e0893a3dfa$var$cachedSetTimeout","$391299e0893a3dfa$var$cachedClearTimeout","$391299e0893a3dfa$var$process","$391299e0893a3dfa$var$defaultSetTimout","Error","$391299e0893a3dfa$var$defaultClearTimeout","$391299e0893a3dfa$var$runTimeout","fun","setTimeout","e1","this","clearTimeout","$391299e0893a3dfa$var$currentQueue","$391299e0893a3dfa$var$queue","$391299e0893a3dfa$var$draining","$391299e0893a3dfa$var$queueIndex","$391299e0893a3dfa$var$cleanUpNextTick","length","concat","$391299e0893a3dfa$var$drainQueue","timeout","len","run","marker","$391299e0893a3dfa$var$runClearTimeout","$391299e0893a3dfa$var$Item","array","$391299e0893a3dfa$var$noop","nextTick","args","Array","arguments","i","push","apply","title","browser","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","chdir","dir","umask","$15d7cb2fd1c4f3ba$var$assertPath","TypeError","JSON","stringify","$15d7cb2fd1c4f3ba$var$normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","$15d7cb2fd1c4f3ba$var$posix","resolvedPath","resolvedAbsolute","undefined","normalize","isAbsolute","trailingSeparator","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","root","base","$15d7cb2fd1c4f3ba$var$_format","ret","delimiter","win32","posix","$70d65f50a9b9216e$export$c1d46b5ea6262c0b","$1f0dc3b9307be026$var$apiKey","fetch","then","data"],"version":3,"file":"index.2197c7e7.js.map"}